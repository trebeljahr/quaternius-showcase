/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mineral_1: THREE.Mesh
    Mineral_2: THREE.Mesh
  }
  materials: {
    Grey: THREE.MeshStandardMaterial
    Pink: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/rpg_items_pack/Mineral.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          name='Mineral_1'
          geometry={nodes.Mineral_1.geometry}
          material={materials.Grey}
          morphTargetDictionary={nodes.Mineral_1.morphTargetDictionary}
          morphTargetInfluences={nodes.Mineral_1.morphTargetInfluences}
        />
        <mesh
          name='Mineral_2'
          geometry={nodes.Mineral_2.geometry}
          material={materials.Pink}
          morphTargetDictionary={nodes.Mineral_2.morphTargetDictionary}
          morphTargetInfluences={nodes.Mineral_2.morphTargetInfluences}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/rpg_items_pack/Mineral.glb')
