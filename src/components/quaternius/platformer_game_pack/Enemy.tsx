/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Enemy_Eyes: THREE.SkinnedMesh
    Enemy_Body_1: THREE.SkinnedMesh
    Enemy_Body_2: THREE.SkinnedMesh
    Enemy_Face_1: THREE.SkinnedMesh
    Enemy_Face_2: THREE.SkinnedMesh
    Enemy_Face_3: THREE.SkinnedMesh
    Enemy_Face_4: THREE.SkinnedMesh
    Body: THREE.Bone
    Head: THREE.Bone
  }
  materials: {
    Eyes: THREE.MeshStandardMaterial
    Main: THREE.MeshStandardMaterial
    Main_Dark: THREE.MeshStandardMaterial
    Horns: THREE.MeshStandardMaterial
    Teeth: THREE.MeshStandardMaterial
    Tongue: THREE.MeshStandardMaterial
  }
}

type ActionName = 'MonsterArmature|Bite_Front' | 'MonsterArmature|Bite_InPlace' | 'MonsterArmature|Dance' | 'MonsterArmature|Death' | 'MonsterArmature|HitRecieve' | 'MonsterArmature|Idle' | 'MonsterArmature|Jump' | 'MonsterArmature|No' | 'MonsterArmature|Walk' | 'MonsterArmature|Yes'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/Enemy.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="MonsterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Body} />
            <primitive object={nodes.Head} />
          </group>
          <skinnedMesh name="Enemy_Eyes" geometry={nodes.Enemy_Eyes.geometry} material={materials.Eyes} skeleton={nodes.Enemy_Eyes.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
          <group name="Enemy_Body" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Enemy_Body_1" geometry={nodes.Enemy_Body_1.geometry} material={materials.Main} skeleton={nodes.Enemy_Body_1.skeleton} />
            <skinnedMesh name="Enemy_Body_2" geometry={nodes.Enemy_Body_2.geometry} material={materials.Main_Dark} skeleton={nodes.Enemy_Body_2.skeleton} />
          </group>
          <group name="Enemy_Face" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="Enemy_Face_1" geometry={nodes.Enemy_Face_1.geometry} material={materials.Main_Dark} skeleton={nodes.Enemy_Face_1.skeleton} />
            <skinnedMesh name="Enemy_Face_2" geometry={nodes.Enemy_Face_2.geometry} material={materials.Horns} skeleton={nodes.Enemy_Face_2.skeleton} />
            <skinnedMesh name="Enemy_Face_3" geometry={nodes.Enemy_Face_3.geometry} material={materials.Teeth} skeleton={nodes.Enemy_Face_3.skeleton} />
            <skinnedMesh name="Enemy_Face_4" geometry={nodes.Enemy_Face_4.geometry} material={materials.Tongue} skeleton={nodes.Enemy_Face_4.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Enemy.glb')
