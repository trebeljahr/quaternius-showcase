/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Tower_1: THREE.Mesh
    Tower_2: THREE.Mesh
    Tower_3: THREE.Mesh
    Tower_4: THREE.Mesh
    Tower_5: THREE.Mesh
    Tower_6: THREE.Mesh
    Tower_7: THREE.Mesh
    Tower_Door_1: THREE.Mesh
    Tower_Door_2: THREE.Mesh
    Tower_Door_3: THREE.Mesh
  }
  materials: {
    Tower_Dark: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
    Wood_Light: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
    Tower: THREE.MeshStandardMaterial
    Metal: THREE.MeshStandardMaterial
    Flag: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Tower.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh geometry={nodes.Tower_1.geometry} material={materials.Tower_Dark} />
        <mesh geometry={nodes.Tower_2.geometry} material={materials.Wood} />
        <mesh geometry={nodes.Tower_3.geometry} material={materials.Wood_Light} />
        <mesh geometry={nodes.Tower_4.geometry} material={materials.Black} />
        <mesh geometry={nodes.Tower_5.geometry} material={materials.Tower} />
        <mesh geometry={nodes.Tower_6.geometry} material={materials.Metal} />
        <mesh geometry={nodes.Tower_7.geometry} material={materials.Flag} />
      </group>
      <group position={[1.25, 2.89, 3.16]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh geometry={nodes.Tower_Door_1.geometry} material={materials.Tower_Dark} />
        <mesh geometry={nodes.Tower_Door_2.geometry} material={materials.Wood} />
        <mesh geometry={nodes.Tower_Door_3.geometry} material={materials.Wood_Light} />
      </group>
    </group>
  )
}

useGLTF.preload('/Tower.glb')
