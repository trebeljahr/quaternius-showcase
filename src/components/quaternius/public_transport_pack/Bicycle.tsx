/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Handle_1: THREE.Mesh
    Handle_2: THREE.Mesh
    FrontWheel: THREE.Mesh
    Saddle: THREE.Mesh
    Frame: THREE.Mesh
    BackWheel: THREE.Mesh
  }
  materials: {
    Bike: THREE.MeshStandardMaterial
    Handle: THREE.MeshStandardMaterial
    Wheel: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Bicycle.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.23, -1.3]} rotation={[-1.36, 0, 0]} scale={5.5}>
        <mesh geometry={nodes.Handle_1.geometry} material={materials.Bike} />
        <mesh geometry={nodes.Handle_2.geometry} material={materials.Handle} />
      </group>
      <mesh
        geometry={nodes.FrontWheel.geometry}
        material={materials.Wheel}
        position={[0, 0, -1.68]}
        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
        scale={12.87}
      />
      <mesh
        geometry={nodes.Saddle.geometry}
        material={materials['Material.003']}
        position={[0, 1.84, 1.4]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={14.94}
      />
      <mesh
        geometry={nodes.Frame.geometry}
        material={materials.Bike}
        position={[0, 0.66, 1.15]}
        rotation={[-1.36, 0, 0]}
        scale={5.5}
      />
      <mesh
        geometry={nodes.BackWheel.geometry}
        material={materials.Wheel}
        position={[0, 0, 2.25]}
        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
        scale={12.87}
      />
    </group>
  )
}

useGLTF.preload('/Bicycle.glb')
