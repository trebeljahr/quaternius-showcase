/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    BackWheels: THREE.Mesh
    FrontWheels: THREE.Mesh
    Ambulance_1: THREE.Mesh
    Ambulance_2: THREE.Mesh
    Ambulance_3: THREE.Mesh
    Ambulance_4: THREE.Mesh
    Ambulance_5: THREE.Mesh
    Ambulance_6: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    White: THREE.MeshStandardMaterial
    Red: THREE.MeshStandardMaterial
    Windows: THREE.MeshStandardMaterial
    Grey: THREE.MeshStandardMaterial
    Lights: THREE.MeshStandardMaterial
    Bumper: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/Ambulance.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.BackWheels.geometry}
        material={materials.Material}
        position={[0, -0.13, -0.98]}
        rotation={[0, Math.PI / 2, 0]}
        scale={100}
      />
      <mesh
        geometry={nodes.FrontWheels.geometry}
        material={materials.Material}
        position={[0.99, -0.13, 2.69]}
        rotation={[0, Math.PI / 2, 0]}
        scale={100}
      />
      <group position={[0, 1.79, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={193.84}>
        <mesh geometry={nodes.Ambulance_1.geometry} material={materials.White} />
        <mesh geometry={nodes.Ambulance_2.geometry} material={materials.Red} />
        <mesh geometry={nodes.Ambulance_3.geometry} material={materials.Windows} />
        <mesh geometry={nodes.Ambulance_4.geometry} material={materials.Grey} />
        <mesh geometry={nodes.Ambulance_5.geometry} material={materials.Lights} />
        <mesh geometry={nodes.Ambulance_6.geometry} material={materials.Bumper} />
      </group>
    </group>
  )
}

useGLTF.preload('/Ambulance.glb')
