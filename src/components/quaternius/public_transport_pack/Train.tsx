/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Train_Cube001-Mesh']: THREE.Mesh
    ['Train_Cube001-Mesh_1']: THREE.Mesh
    ['Train_Cube001-Mesh_2']: THREE.Mesh
    ['Train_Cube001-Mesh_3']: THREE.Mesh
  }
  materials: {
    Outside: THREE.MeshStandardMaterial
    Top: THREE.MeshStandardMaterial
    Windows: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/public_transport_pack/Train.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['Train_Cube001-Mesh'].geometry} material={materials.Outside} />
      <mesh geometry={nodes['Train_Cube001-Mesh_1'].geometry} material={materials.Top} />
      <mesh geometry={nodes['Train_Cube001-Mesh_2'].geometry} material={materials.Windows} />
      <mesh geometry={nodes['Train_Cube001-Mesh_3'].geometry} material={materials.Black} />
    </group>
  )
}

useGLTF.preload('/glb/public_transport_pack/Train.glb')
