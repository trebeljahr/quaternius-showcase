/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    BackWheels: THREE.Mesh
    Bus_1: THREE.Mesh
    Bus_2: THREE.Mesh
    Bus_3: THREE.Mesh
    Bus_4: THREE.Mesh
    Bus_5: THREE.Mesh
    Bus_6: THREE.Mesh
    FrontWheels: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    Top: THREE.MeshStandardMaterial
    Bottom: THREE.MeshStandardMaterial
    Bumper: THREE.MeshStandardMaterial
    Windows: THREE.MeshStandardMaterial
    Lights: THREE.MeshStandardMaterial
    Details: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/public_transport_pack/Bus.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.BackWheels.geometry}
        material={materials.Material}
        position={[3.19, -0.96, -0.36]}
        rotation={[0, Math.PI / 2, 0]}
        scale={100}
      />
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh geometry={nodes.Bus_1.geometry} material={materials.Top} />
        <mesh geometry={nodes.Bus_2.geometry} material={materials.Bottom} />
        <mesh geometry={nodes.Bus_3.geometry} material={materials.Bumper} />
        <mesh geometry={nodes.Bus_4.geometry} material={materials.Windows} />
        <mesh geometry={nodes.Bus_5.geometry} material={materials.Lights} />
        <mesh geometry={nodes.Bus_6.geometry} material={materials.Details} />
      </group>
      <mesh
        geometry={nodes.FrontWheels.geometry}
        material={materials.Material}
        position={[0.34, -0.96, -0.41]}
        rotation={[0, Math.PI / 2, 0]}
        scale={100}
      />
    </group>
  )
}

useGLTF.preload('/glb/public_transport_pack/Bus.glb')
