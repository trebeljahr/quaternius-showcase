/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    BackWheels: THREE.Mesh
    Front_Wheels: THREE.Mesh
    Taxi: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Taxi.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.BackWheels.geometry} material={materials['Material.002']} position={[0, -0.52, -1.27]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Front_Wheels.geometry} material={materials['Material.002']} position={[0, -0.52, 1.31]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh geometry={nodes.Taxi.geometry} material={materials['Material.003']} position={[0, 0.03, 0]} rotation={[Math.PI / 2, 0, 0]} scale={-63.08} />
    </group>
  )
}

useGLTF.preload('/Taxi.glb')
