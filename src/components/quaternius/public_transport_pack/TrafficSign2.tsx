/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['TrafficSign_Cylinder-Mesh']: THREE.Mesh
    ['TrafficSign_Cylinder-Mesh_1']: THREE.Mesh
    ['TrafficSign_Cylinder-Mesh_2']: THREE.Mesh
  }
  materials: {
    Border: THREE.MeshStandardMaterial
    Sign: THREE.MeshStandardMaterial
    Pole: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/public_transport_pack/TrafficSign2.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['TrafficSign_Cylinder-Mesh'].geometry} material={materials.Border} />
      <mesh geometry={nodes['TrafficSign_Cylinder-Mesh_1'].geometry} material={materials.Sign} />
      <mesh geometry={nodes['TrafficSign_Cylinder-Mesh_2'].geometry} material={materials.Pole} />
    </group>
  )
}

useGLTF.preload('/glb/public_transport_pack/TrafficSign2.glb')
