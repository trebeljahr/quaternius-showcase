/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ShibaInu_1: THREE.SkinnedMesh
    ShibaInu_2: THREE.SkinnedMesh
    ShibaInu_3: THREE.SkinnedMesh
    ShibaInu_4: THREE.SkinnedMesh
    ShibaInu_5: THREE.SkinnedMesh
    ShibaInu_6: THREE.SkinnedMesh
    Body: THREE.Bone
    IKBackLegL: THREE.Bone
    IKFrontLegL: THREE.Bone
    IKBackLegR: THREE.Bone
    IKFrontLegR: THREE.Bone
  }
  materials: {
    Main: THREE.MeshStandardMaterial
    Main_Light: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
    Eyes_White: THREE.MeshStandardMaterial
    Eyes_Pupil: THREE.MeshStandardMaterial
    Eyes_Black: THREE.MeshStandardMaterial
  }
}

type ActionName = 'AnimalArmature|Attack' | 'AnimalArmature|Death' | 'AnimalArmature|Eating' | 'AnimalArmature|Gallop' | 'AnimalArmature|Gallop_Jump' | 'AnimalArmature|Idle' | 'AnimalArmature|Idle_2' | 'AnimalArmature|Idle_2_HeadLow' | 'AnimalArmature|Idle_HitReact_Left' | 'AnimalArmature|Idle_HitReact_Right' | 'AnimalArmature|Jump_ToIdle' | 'AnimalArmature|Walk'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/ShibaInu.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="AnimalArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Body} />
            <primitive object={nodes.IKBackLegL} />
            <primitive object={nodes.IKFrontLegL} />
            <primitive object={nodes.IKBackLegR} />
            <primitive object={nodes.IKFrontLegR} />
          </group>
          <group name="ShibaInu" position={[0, 0, 0.06]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh name="ShibaInu_1" geometry={nodes.ShibaInu_1.geometry} material={materials.Main} skeleton={nodes.ShibaInu_1.skeleton} />
            <skinnedMesh name="ShibaInu_2" geometry={nodes.ShibaInu_2.geometry} material={materials.Main_Light} skeleton={nodes.ShibaInu_2.skeleton} />
            <skinnedMesh name="ShibaInu_3" geometry={nodes.ShibaInu_3.geometry} material={materials.Black} skeleton={nodes.ShibaInu_3.skeleton} />
            <skinnedMesh name="ShibaInu_4" geometry={nodes.ShibaInu_4.geometry} material={materials.Eyes_White} skeleton={nodes.ShibaInu_4.skeleton} />
            <skinnedMesh name="ShibaInu_5" geometry={nodes.ShibaInu_5.geometry} material={materials.Eyes_Pupil} skeleton={nodes.ShibaInu_5.skeleton} />
            <skinnedMesh name="ShibaInu_6" geometry={nodes.ShibaInu_6.geometry} material={materials.Eyes_Black} skeleton={nodes.ShibaInu_6.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/ShibaInu.glb')
