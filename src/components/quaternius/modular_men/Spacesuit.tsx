/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    SpaceSuit_Body_1: THREE.SkinnedMesh
    SpaceSuit_Body_2: THREE.SkinnedMesh
    SpaceSuit_Body_3: THREE.SkinnedMesh
    SpaceSuit_Body_4: THREE.SkinnedMesh
    SpaceSuit_Feet_1: THREE.SkinnedMesh
    SpaceSuit_Feet_2: THREE.SkinnedMesh
    SpaceSuit_Head_1: THREE.SkinnedMesh
    SpaceSuit_Head_2: THREE.SkinnedMesh
    SpaceSuit_Head_3: THREE.SkinnedMesh
    SpaceSuit_Legs_1: THREE.SkinnedMesh
    SpaceSuit_Legs_2: THREE.SkinnedMesh
    SpaceSuit_Legs_3: THREE.SkinnedMesh
    SpaceSuit_Legs_4: THREE.SkinnedMesh
    Root: THREE.Bone
  }
  materials: {
    SciFi_Light: THREE.MeshStandardMaterial
    SciFi_MainDark: THREE.MeshStandardMaterial
    SciFi_Light_Accent: THREE.MeshStandardMaterial
    SciFi_Main: THREE.MeshStandardMaterial
    Grey: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Spacesuit.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <primitive object={nodes.Root} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <skinnedMesh
          geometry={nodes.SpaceSuit_Body_1.geometry}
          material={materials.SciFi_Light}
          skeleton={nodes.SpaceSuit_Body_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Body_2.geometry}
          material={materials.SciFi_MainDark}
          skeleton={nodes.SpaceSuit_Body_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Body_3.geometry}
          material={materials.SciFi_Light_Accent}
          skeleton={nodes.SpaceSuit_Body_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Body_4.geometry}
          material={materials.SciFi_Main}
          skeleton={nodes.SpaceSuit_Body_4.skeleton}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <skinnedMesh
          geometry={nodes.SpaceSuit_Feet_1.geometry}
          material={materials.SciFi_Light}
          skeleton={nodes.SpaceSuit_Feet_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Feet_2.geometry}
          material={materials.SciFi_Light_Accent}
          skeleton={nodes.SpaceSuit_Feet_2.skeleton}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <skinnedMesh
          geometry={nodes.SpaceSuit_Head_1.geometry}
          material={materials.SciFi_Light}
          skeleton={nodes.SpaceSuit_Head_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Head_2.geometry}
          material={materials.SciFi_Light_Accent}
          skeleton={nodes.SpaceSuit_Head_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Head_3.geometry}
          material={materials.Grey}
          skeleton={nodes.SpaceSuit_Head_3.skeleton}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <skinnedMesh
          geometry={nodes.SpaceSuit_Legs_1.geometry}
          material={materials.SciFi_Light}
          skeleton={nodes.SpaceSuit_Legs_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Legs_2.geometry}
          material={materials.SciFi_MainDark}
          skeleton={nodes.SpaceSuit_Legs_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Legs_3.geometry}
          material={materials.SciFi_Light_Accent}
          skeleton={nodes.SpaceSuit_Legs_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.SpaceSuit_Legs_4.geometry}
          material={materials.SciFi_Main}
          skeleton={nodes.SpaceSuit_Legs_4.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/Spacesuit.glb')
